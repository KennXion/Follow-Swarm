version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: spotify_swarm_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: spotify_swarm
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: spotify_swarm_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Uncomment when ready to run the app in Docker
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: spotify_swarm_app
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     NODE_ENV: development
  #     DATABASE_URL: postgresql://postgres:postgres@postgres:5432/spotify_swarm
  #     REDIS_URL: redis://redis:6379
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   command: npm run dev

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: spotify_swarm_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@spotifyswarm.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  redis_data:
  pgadmin_data: